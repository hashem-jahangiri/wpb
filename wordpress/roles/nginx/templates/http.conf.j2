  proxy_cache_path /var/cache/nginx/{{ domain_name }} levels={{ levels|default('1:2',true) }} keys_zone={{ domain_name }}:{{ zone|default('10m',true) }} inactive={{ inactive|default('240m',true) }} max_size={{ max_size|default('256m',true) }};

  server {
    listen {{ http_port|default('80') }};
    server_name {{ domain_name }} {% if wild_card %} *.{{ domain_name }} {% endif -%};

    location / {
        proxy_pass http://{{ user_name }}-{{ project_name }};
        proxy_http_version {{ http_version|default('1.1') }};
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_buffering {{ buffering|default('on') }};
        proxy_cache_valid 200 {{ cache_valid|default('48h') }};
        proxy_cache_background_update {{ cache_update|default('on') }};
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache {{ domain_name }};
      }
  }

server {
    listen 80;
    server_name {{ user_name }}-{{ project_name }}.{{ default_domain_name }};

    location / {
        proxy_pass http://{{ user_name }}-{{ project_name }}-filemanager;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

      }
  }
 
